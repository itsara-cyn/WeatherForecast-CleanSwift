//
//  LocationSearchPresenterTests.swift
//  WeatherForecast
//
//  Created by Itsaraporn Chaichayanon on 6/8/18.
//  Copyright (c) 2018 ItsaraChai. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import WeatherForecast
import XCTest

class LocationSearchPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: LocationSearchPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupLocationSearchPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupLocationSearchPresenter()
  {
    sut = LocationSearchPresenter()
  }
  
  // MARK: Test doubles
  
  class LocationSearchDisplayLogicSpy: LocationSearchDisplayLogic
  {
    var displayWeatherDetailCalled = false
    var displayAlertMessageCalled = false

    func displayWeatherDetail(viewModel: LocationSearch.ViewModel.Weather) {
        displayWeatherDetailCalled = true
    }
    
    func displayAlertMessage(viewModel: LocationSearch.ViewModel.Error) {
        displayAlertMessageCalled = true
    }
  }
  
  // MARK: Tests
  
  func testPresentSomething()
  {
    // Given
//    let spy = LocationSearchDisplayLogicSpy()
//    sut.viewController = spy
//    let response = LocationSearch.Response.FetchCurrentWeather(forcastItem: ForecastItem)
//    
//    // When
//    sut.presentSomething(response: response)
//    
//    // Then
//    XCTAssertTrue(spy.displaySomethingCalled, "presentSomething(response:) should ask the view controller to display the result")
  }
}
