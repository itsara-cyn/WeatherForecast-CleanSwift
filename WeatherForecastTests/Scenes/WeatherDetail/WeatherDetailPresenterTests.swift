//
//  WeatherDetailPresenterTests.swift
//  WeatherForecast
//
//  Created by Itsaraporn Chaichayanon on 6/8/18.
//  Copyright (c) 2018 ItsaraChai. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import WeatherForecast
import XCTest

class WeatherDetailPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: WeatherDetailPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupWeatherDetailPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupWeatherDetailPresenter()
  {
    sut = WeatherDetailPresenter()
  }
  
  // MARK: Test doubles
  
  class WeatherDetailDisplayLogicSpy: WeatherDetailDisplayLogic
  {
    var displayWeatherCalled = false

    func displayWeather(viewModel: WeatherDetail.ViewModel.DisplayWeather) {
        displayWeatherCalled = true
    }
  }
  
  // MARK: Tests
  
  func testPresentSomething()
  {
    // Given
    let forecastItem = ForecastItem(base: "", clouds: nil, cod: nil, coord: nil, dt: nil, id: nil, main: nil, name: nil, sys: nil, visibility: nil, weather: nil, wind: nil)
    let spy = WeatherDetailDisplayLogicSpy()
    sut.viewController = spy
    let response = WeatherDetail.Response(forcastItem: forecastItem)
    
    // When
    sut.presentWeather(response: response)
    
    // Then
    XCTAssertTrue(spy.displayWeatherCalled, "presentSomething(response:) should ask the view controller to display the result")
  }
}
