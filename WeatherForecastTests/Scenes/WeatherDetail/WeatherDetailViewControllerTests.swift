//
//  WeatherDetailViewControllerTests.swift
//  WeatherForecast
//
//  Created by Itsaraporn Chaichayanon on 6/8/18.
//  Copyright (c) 2018 ItsaraChai. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import WeatherForecast
import XCTest

class WeatherDetailViewControllerTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: WeatherDetailViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        window = UIWindow()
        setupWeatherDetailViewController()
    }
    
    override func tearDown()
    {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupWeatherDetailViewController()
    {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "WeatherDetailViewController") as! WeatherDetailViewController
    }
    
    func loadView()
    {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class WeatherDetailBusinessLogicSpy: WeatherDetailBusinessLogic
    {
        var getWeatherCalled = false

        func getWeather(request: WeatherDetail.Request.GetWeather) {
            getWeatherCalled = true
        }
    }
    
    // MARK: Tests
    
    func testShouldDoSomethingWhenViewIsLoaded()
    {
        // Given
        let spy = WeatherDetailBusinessLogicSpy()
        sut.interactor = spy
        
        // When
        loadView()
        
        // Then
        XCTAssertTrue(spy.getWeatherCalled, "viewDidLoad() should ask the interactor to do something")
    }
    
    func testDisplaySomething()
    {
        // Given
//        let viewModel = WeatherDetail.ViewModel.DisplayWeather(location: "", temperature: 0, humidity: 0)
//        
//        // When
//        loadView()
//        sut.displaySomething(viewModel: viewModel)
//        
//        // Then
//        XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
    }
}
