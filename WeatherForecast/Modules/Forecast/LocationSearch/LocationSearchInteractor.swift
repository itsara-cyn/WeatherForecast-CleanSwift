//
//  LocationSearchInteractor.swift
//  WeatherForecast
//
//  Created by Itsaraporn Chaichayanon on 6/8/18.
//  Copyright (c) 2018 ItsaraChai. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LocationSearchBusinessLogic
{
    func fetchCurrentWeather(request: LocationSearch.Request.FetchCurrentWeather)
}

protocol LocationSearchDataStore
{
    var forecastItem: ForecastItem? { get set }
}

class LocationSearchInteractor: LocationSearchBusinessLogic, LocationSearchDataStore
{
    var forecastItem: ForecastItem?

    var presenter: LocationSearchPresentationLogic?
    var worker: LocationSearchWorker?
    
    // MARK: Do something
    
    func fetchCurrentWeather(request: LocationSearch.Request.FetchCurrentWeather)
    {
        worker = LocationSearchWorker()
        worker?.fetchCurrentWeather(location: request.location, completionHandler: { [weak self] response in
            guard let strongSelf = self else { return }
            switch response {
            case .forecastItem(let response):
                strongSelf.forecastItem = response
                
                let _response = LocationSearch.Response.FetchCurrentWeather(forcastItem: response)
                strongSelf.presenter?.presentWeatherDetail(response: _response)
            case .error(let error):
                strongSelf.presenter?.presentError(error: error)
                break
            }
        })
    }
}
