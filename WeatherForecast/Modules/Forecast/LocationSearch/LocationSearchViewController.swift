//
//  LocationSearchViewController.swift
//  WeatherForecast
//
//  Created by Itsaraporn Chaichayanon on 6/8/18.
//  Copyright (c) 2018 ItsaraChai. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LocationSearchDisplayLogic: class
{
    func displayWeatherDetail(viewModel: LocationSearch.ViewModel.Weather)
    func displayAlertMessage(viewModel: LocationSearch.ViewModel.Error)
}

class LocationSearchViewController: UIViewController
{
    
    @IBOutlet weak var oLabelTitle: UILabel!
    @IBOutlet weak var oTextFieldSearch: UITextField!
    @IBOutlet weak var oButtonSearch: UIButton!
    
    var interactor: LocationSearchBusinessLogic?
    var router: (NSObjectProtocol & LocationSearchRoutingLogic & LocationSearchDataPassing)?
    
    // MARK: Object lifecycle
    override func awakeFromNib()
    {
        super.awakeFromNib()
        LocationSearchConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        oTextFieldSearch.text = "London"
    }
    
    @IBAction func pressButton(_ sender: Any) {
        if let button = sender as? UIButton {
            switch button {
            case oButtonSearch:
                let request = LocationSearch.Request.FetchCurrentWeather(location: oTextFieldSearch.text ?? "")
                interactor?.fetchCurrentWeather(request: request)
            default: break
            }
        }
    }
}

extension LocationSearchViewController: LocationSearchDisplayLogic {
    func displayAlertMessage(viewModel: LocationSearch.ViewModel.Error) {
        print("displayAlertMessage : \(viewModel.message)")
    }
    
    func displayWeatherDetail(viewModel: LocationSearch.ViewModel.Weather) {
        router?.routeToWeatherDetail(segue: nil)
    }
}
